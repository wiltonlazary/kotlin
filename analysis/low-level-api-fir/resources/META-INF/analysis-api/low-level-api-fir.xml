<idea-plugin>
  <extensionPoints>
    <extensionPoint
        qualifiedName="org.jetbrains.kotlin.llFirSessionConfigurator"
        interface="org.jetbrains.kotlin.analysis.low.level.api.fir.sessions.LLFirSessionConfigurator"
        area="IDEA_PROJECT"
        dynamic="true"/>
  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">
    <registryKey
        defaultValue="false"
        description="Run resolve under a global lock."
        key="kotlin.parallel.resolve.under.global.lock"
        restartRequired="true"
    />

    <projectService
        serviceInterface="org.jetbrains.kotlin.analysis.low.level.api.fir.project.structure.LLFirLibrarySymbolProviderFactory"
        serviceImplementation="org.jetbrains.kotlin.analysis.low.level.api.fir.stubBased.deserialization.LLStubBasedLibrarySymbolProviderFactory"
    />

    <projectService
        serviceInterface="org.jetbrains.kotlin.analysis.low.level.api.fir.api.services.LLFirElementByPsiElementChooser"
        serviceImplementation="org.jetbrains.kotlin.analysis.low.level.api.fir.services.LLRealFirElementByPsiElementChooser"
    />

    <projectService serviceImplementation="org.jetbrains.kotlin.analysis.low.level.api.fir.project.structure.LLFirBuiltinsSessionFactory"/>
    <projectService serviceImplementation="org.jetbrains.kotlin.analysis.low.level.api.fir.sessions.LLFirSessionCache"/>
    <projectService serviceImplementation="org.jetbrains.kotlin.analysis.low.level.api.fir.sessions.LLFirSessionInvalidationService"/>
    <projectService
        serviceImplementation="org.jetbrains.kotlin.analysis.low.level.api.fir.sessions.LLFirSessionInvalidationEventPublisher"
    />
    <projectService serviceImplementation="org.jetbrains.kotlin.analysis.low.level.api.fir.LLFirGlobalResolveComponents"/>
    <projectService serviceImplementation="org.jetbrains.kotlin.analysis.low.level.api.fir.LLFirResolveSessionService"/>
    <projectService
        serviceImplementation="org.jetbrains.kotlin.analysis.low.level.api.fir.file.structure.LLFirDeclarationModificationService"
    />
  </extensions>

  <projectListeners>
    <listener
        class="org.jetbrains.kotlin.analysis.low.level.api.fir.sessions.LLFirSessionInvalidationService$LLKotlinModuleStateModificationListener"
        topic="org.jetbrains.kotlin.analysis.providers.topics.KotlinModuleStateModificationListener"
    />
    <listener
        class="org.jetbrains.kotlin.analysis.low.level.api.fir.sessions.LLFirSessionInvalidationService$LLKotlinModuleOutOfBlockModificationListener"
        topic="org.jetbrains.kotlin.analysis.providers.topics.KotlinModuleOutOfBlockModificationListener"
    />
    <listener
        class="org.jetbrains.kotlin.analysis.low.level.api.fir.sessions.LLFirSessionInvalidationService$LLKotlinGlobalModuleStateModificationListener"
        topic="org.jetbrains.kotlin.analysis.providers.topics.KotlinGlobalModuleStateModificationListener"
    />
    <listener
        class="org.jetbrains.kotlin.analysis.low.level.api.fir.sessions.LLFirSessionInvalidationService$LLKotlinGlobalSourceModuleStateModificationListener"
        topic="org.jetbrains.kotlin.analysis.providers.topics.KotlinGlobalSourceModuleStateModificationListener"
    />
    <listener
        class="org.jetbrains.kotlin.analysis.low.level.api.fir.sessions.LLFirSessionInvalidationService$LLKotlinGlobalSourceOutOfBlockModificationListener"
        topic="org.jetbrains.kotlin.analysis.providers.topics.KotlinGlobalSourceOutOfBlockModificationListener"
    />
    <listener
        class="org.jetbrains.kotlin.analysis.low.level.api.fir.sessions.LLFirSessionInvalidationService$LLKotlinCodeFragmentContextModificationListener"
        topic="org.jetbrains.kotlin.analysis.providers.topics.KotlinCodeFragmentContextModificationListener"
    />
    <listener
        class="org.jetbrains.kotlin.analysis.low.level.api.fir.sessions.LLFirSessionInvalidationService$LLPsiModificationTrackerListener"
        topic="com.intellij.psi.util.PsiModificationTracker$Listener"
    />
  </projectListeners>
</idea-plugin>