KtApplicableCallCandidateInfo:
  candidate = KtSimpleFunctionCall:
    isImplicitInvoke = true
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = KtExplicitReceiverValue:
        expression = f
        isSafeNavigation = false
        type = @ExtensionFunctionType kotlin.Function1<kotlin.String, kotlin.Unit>
      extensionReceiver = KtExplicitReceiverValue:
        expression = ""
        isSafeNavigation = false
        type = kotlin.String
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = kotlin.Unit
        symbol = kotlin/Function1.invoke(<dispatch receiver>: kotlin.Function1<P1, R>, p1: P1): R
        valueParameters = [
          KtVariableLikeSignature:
            name = p1
            receiverType = null
            returnType = kotlin.String
            symbol = p1: P1
            callableIdIfNonLocal = null
        ]
        callableIdIfNonLocal = kotlin/Function1.invoke
    typeArgumentsMapping = {}
    argumentMapping = {}
  isInBestCandidates = true
