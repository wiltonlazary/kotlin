KtApplicableCallCandidateInfo:
  candidate = KtSimpleFunctionCall:
    isImplicitInvoke = false
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = KtExplicitReceiverValue:
        expression = i
        isSafeNavigation = false
        type = kotlin.Int
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = kotlin.Int
        symbol = kotlin/Int.compareTo(<dispatch receiver>: kotlin.Int, other: kotlin.Int): kotlin.Int
        valueParameters = [
          KtVariableLikeSignature:
            name = other
            receiverType = null
            returnType = kotlin.Int
            symbol = other: kotlin.Int
            callableIdIfNonLocal = null
        ]
        callableIdIfNonLocal = kotlin/Int.compareTo
    typeArgumentsMapping = {}
    argumentMapping = {
      j -> (KtVariableLikeSignature:
        name = other
        receiverType = null
        returnType = kotlin.Int
        symbol = other: kotlin.Int
        callableIdIfNonLocal = null)
    }
  isInBestCandidates = true
