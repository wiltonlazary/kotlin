KtApplicableCallCandidateInfo:
  candidate = KtSimpleFunctionCall:
    isImplicitInvoke = false
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = null
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = kotlin.Unit
        symbol = /call(a: @R|kotlin.ParameterName|(name = String(notMe))  kotlin.Int, b: @R|kotlin.ParameterName|(name = String(meNeither))  kotlin.String): kotlin.Unit
        valueParameters = [
          KtVariableLikeSignature:
            name = a
            receiverType = null
            returnType = @R|kotlin.ParameterName|(name = String(notMe))  kotlin.Int
            symbol = a: @R|kotlin.ParameterName|(name = String(notMe))  kotlin.Int
            callableIdIfNonLocal = null,
          KtVariableLikeSignature:
            name = b
            receiverType = null
            returnType = @R|kotlin.ParameterName|(name = String(meNeither))  kotlin.String
            symbol = b: @R|kotlin.ParameterName|(name = String(meNeither))  kotlin.String
            callableIdIfNonLocal = null
        ]
        callableIdIfNonLocal = /call
    typeArgumentsMapping = {}
    argumentMapping = {
      1 -> (KtVariableLikeSignature:
        name = a
        receiverType = null
        returnType = @R|kotlin.ParameterName|(name = String(notMe))  kotlin.Int
        symbol = a: @R|kotlin.ParameterName|(name = String(notMe))  kotlin.Int
        callableIdIfNonLocal = null),
      "" -> (KtVariableLikeSignature:
        name = b
        receiverType = null
        returnType = @R|kotlin.ParameterName|(name = String(meNeither))  kotlin.String
        symbol = b: @R|kotlin.ParameterName|(name = String(meNeither))  kotlin.String
        callableIdIfNonLocal = null)
    }
  isInBestCandidates = true
