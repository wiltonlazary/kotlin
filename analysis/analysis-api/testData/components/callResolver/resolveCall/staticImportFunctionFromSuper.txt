KtSuccessCallInfo:
  call = KtSimpleFunctionCall:
    isImplicitInvoke = false
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = KtImplicitReceiverValue:
        symbol = KtNamedClassOrObjectSymbol:
          annotationsList: []
          classIdIfNonLocal: one/two/TopLevelObject
          classKind: OBJECT
          companionObject: null
          contextReceivers: []
          isActual: false
          isData: false
          isExpect: false
          isExternal: false
          isFun: false
          isInline: false
          isInner: false
          modality: FINAL
          name: TopLevelObject
          origin: SOURCE
          superTypes: [
            KtUsualClassType:
              annotationsList: []
              ownTypeArguments: []
              type: one/two/BaseClass
          ]
          symbolKind: TOP_LEVEL
          typeParameters: []
          visibility: Public
        type = one.two.TopLevelObject
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = kotlin.Unit
        symbol = one/two/BaseClass.foo(<dispatch receiver>: one.two.BaseClass): kotlin.Unit
        valueParameters = []
        callableIdIfNonLocal = one/two/BaseClass.foo
    typeArgumentsMapping = {}
    argumentMapping = {}
