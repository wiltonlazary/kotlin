group 'com.example'
version '1.0'

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin-multiplatform'

repositories {
    mavenLocal()
    mavenCentral()
}

kotlin {
    targets {
        fromPreset(presets.<SingleNativeTarget>, 'host')

        fromPreset(presets.iosX64, 'ios')
        fromPreset(presets.iosSimulatorArm64, 'iosArm64')

        configure([findByName('host')]) {
            compilations.create("anotherTest")
            binaries {
                test("another", [DEBUG]) {
                    compilation = compilations.anotherTest
                }
            }
        }
    }

    sourceSets {
        anotherTest
        hostAnotherTest.dependsOn(anotherTest)
    }
}

// Check that test events are correctly reported in CLI.
configure([hostTest, iosTest, iosArm64Test]){
    trackEnvironment("ANDROID_HOME")

    testLogging {
        events "passed", "skipped", "failed"
    }
}

task checkGetters {
    doLast {
        configure([kotlin.targets.host]) {
            println("Get test: ${binaries.getTest(DEBUG).outputFile.name}")
            println("Find test: ${binaries.findTest(DEBUG).outputFile.name}")
            println("Get test: ${binaries.getTest("another", DEBUG).outputFile.name}")
            println("Find test: ${binaries.findTest("another", DEBUG).outputFile.name}")
        }
    }
}
