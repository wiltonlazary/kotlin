@kotlin.Metadata
public final class ParameterizedInlineFunExtensionTest {
    // source: 'ParameterizedInlineFunExtensionTest.kt'
    private synthetic final static field tail$volatile$FU: java.util.concurrent.atomic.AtomicReferenceFieldUpdater
    private synthetic volatile field tail$volatile: java.lang.Object
    static method <clinit>(): void
    public method <init>(): void
    private synthetic final method bar$atomicfu$array(p0: java.util.concurrent.atomic.AtomicReferenceArray, p1: int, p2: java.lang.Object, p3: java.lang.Object): java.lang.Object
    private synthetic final method bar$atomicfu(p0: java.lang.Object, p1: java.util.concurrent.atomic.AtomicReferenceFieldUpdater, p2: java.lang.Object, p3: java.lang.Object): java.lang.Object
    private synthetic final method foo$atomicfu$array(p0: java.util.concurrent.atomic.AtomicReferenceArray, p1: int, p2: java.lang.Object, p3: java.lang.Object, p4: kotlin.jvm.functions.Function1): java.lang.Object
    private synthetic final method foo$atomicfu(p0: java.lang.Object, p1: java.util.concurrent.atomic.AtomicReferenceFieldUpdater, p2: java.lang.Object, p3: java.lang.Object, p4: kotlin.jvm.functions.Function1): java.lang.Object
    private synthetic final static method getTail$volatile$FU(): java.util.concurrent.atomic.AtomicReferenceFieldUpdater
    private synthetic final method getTail$volatile(): java.lang.Object
    private synthetic final method setTail$volatile(p0: java.lang.Object): void
    public final method testClose(): void
}

@kotlin.Metadata
public final class ParameterizedInlineFunExtensionTestKt {
    // source: 'ParameterizedInlineFunExtensionTest.kt'
    public final static @org.jetbrains.annotations.NotNull method box(): java.lang.String
}
